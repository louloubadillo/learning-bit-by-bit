#!markdown

<h1>2.6 Images</h1>

#!markdown

_In this lesson you will learn how images are stored and understood by the computer using arrays_

#!markdown

<span style="font-size: 1rem"> 
    How can we represent colors?
</span>

#!markdown

<h2> Primary colors </h2>

You might remember from elementary school that in the visual arts we can create colors using only 3 _primary colors_. In the world of optics we have discovered that the primary colors of light are: Red, Green and Blue (RGB). This means that all colors you can see are nothing more than a combination of hues of red, green and blue. Thus we can represent a color as an array of three values that represent hues. 

For example to represent full red we write:

$$
\begin{array}{|c|c|c|}
    \hline
    \textcolor{red}{255} & \textcolor{green}{0} & \textcolor{blue}{0} \\
    \hline
\end{array}
$$

If each of this arrays represents a color we can draw a line by creating an array of colors! Each color would be used per pixel:

<img src="../../images/line.jpg" style="height: 8px">

And we can create any 2D image by creating a matrix of colors!

Note:

You might have noticed that we used 255 for the maximum value of red (which happens to be $\small{2^{8}-1}$). However, for the sake of simplicity we will normalize this values so that 1 represents the maximum value and 0 represents the minimum.

<h2>Combining colors</h2>

For this activity you will need to know only 2 colors, white and black.

White occurs when you have all colors; that means red, green, and blue are 1 (in the normalized form).

Black is a synonym for no-light (or no-colors), thus it occurs when red, green, and blue are 0.

#!csharp

#r "nuget: Interactive.Journey"

#!csharp

#!start-lesson --from-file "challenges.dib"
