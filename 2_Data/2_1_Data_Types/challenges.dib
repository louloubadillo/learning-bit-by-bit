#!csharp

#r "nuget: Interactive.Journey"
using Microsoft.DotNet.Interactive;
using Microsoft.DotNet.Interactive.Journey;
using Microsoft.DotNet.Interactive.Formatting;

#!csharp

bool correctDataTypes = false;

#!csharp

Lesson.CurrentChallenge.AddRule("Rule: 2.1. Data types", context =>
{
    if(correctDataTypes){
        context.Pass("Awesome! Let's keep on going");
    } else {
        context.Fail("Check your answer.");
    }
});

#!csharp

Lesson.CurrentChallenge.OnCodeSubmitted(async context =>
{
    context.SetMessage("Please wait! We are checking your submission");
    int numPassed = context.RuleEvaluations.Count(e => e.Passed);
    int total = context.RuleEvaluations.Count();
    if(numPassed == total){
        context.SetMessage("Congratulations! Challenge completed");
        await context.StartNextChallengeAsync();
    } else {
        context.SetMessage("Challenge 2.1. is not complete");
    }
});

#!markdown

# [Challenge] Data Types

#!javascript

window.verifyDataTypes = function(){
    let data = [...document.querySelectorAll('select')].map(l=>l.value);
    let result = true;
    if(data[0] != 'float') result = false;
    if(data[1] != 'int') result = false;
    if(data[2] != 'char') result = false;
    if(data[3] != 'bool') result = false;
    interactive.submitCode(`correctDataTypes = ${result};`, 'csharp');
}

#!markdown

[Question]
<h2>Challenge</h2>

<mark>_FIll in the blanks to match each data type_</mark>

#!html

<table id="2_1_challenge">
    <tr>
        <th>Data type</th>
        <th>Description</th>
    </tr>
    <tr>
        <td>
            <select>
                <option value="int">int</option>
                <option value="float">float</option>
                <option value="char">char</option>
                <option value="bool">bool</option>
                <option value="ref">ref</option>
            </select>
        </td>
        <td>
            Represents a fraction number
        </td>
    </tr>
    <tr>
        <td>
            <select>
                <option value="int">int</option>
                <option value="float">float</option>
                <option value="char">char</option>
                <option value="bool">bool</option>
                <option value="ref">ref</option>
            </select>
        </td>
        <td>
            Represents an integer number
        </td>
    </tr>
    <tr>
        <td>
            <select>
                <option value="int">int</option>
                <option value="float">float</option>
                <option value="char">char</option>
                <option value="bool">bool</option>
                <option value="ref">ref</option>
            </select>
        </td>
        <td>
            Represents an alphanumeric character
        </td>
    </tr>
    <tr>
        <td>
            <select>
                <option value="int">int</option>
                <option value="float">float</option>
                <option value="char">char</option>
                <option value="bool">bool</option>
                <option value="ref">ref</option>
            </select>
        </td>
        <td>
            Represents a true/false value
        </td>
    </tr>
<table>

#!javascript

verifyDataTypes()

#!csharp

display(correctDataTypes) 
